---
// src/components/BlogCard.astro
export interface BlogCardProps {
  title: string;
  pubDate: Date;
  link: string;
  imageSrc: string;
  tags?: string[];
  isLarge?: boolean;
  class?: string;
}

const { title, pubDate, link, imageSrc, tags = [], isLarge = false, class: className = '' } = Astro.props;
---

<div class={`group relative rounded-lg shadow-lg overflow-hidden h-60 md:h-96 flex flex-col ${className}`}>
  <a href={link} class="block h-full w-full">
    <!-- Image Container with Full Image Display -->
    <div class="relative h-full w-full">
      <img
        src={imageSrc}
        alt=""
        class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
      />
      <!-- Overlay with Text -->
      <div
        class="absolute bottom-0 left-0 w-full bg-gradient-to-t from-gray-900 to-transparent text-white p-4"
      >
        <h2 class="font-bold text-lg sm:text-xl">{title}</h2>

        {tags.length > 0 && (
          <div class="flex flex-wrap gap-1 mt-1.5 mb-1">
            {tags.slice(0, 3).map((tag) => (
              <span class="text-xs px-2 py-0.5 bg-black bg-opacity-30 rounded-full">
                #{tag}
              </span>
            ))}
            {tags.length > 3 && (
              <span class="text-xs px-2 py-0.5 bg-black bg-opacity-30 rounded-full">
                +{tags.length - 3}
              </span>
            )}
          </div>
        )}

        <time
          datetime={pubDate.toISOString()}
          class="block mt-1 text-sm text-gray-300"
        >
          {pubDate.toLocaleDateString('en-us', {
            year: 'numeric',
            month: 'short',
            day: 'numeric',
          })}
        </time>
      </div>
    </div>
  </a>
</div>