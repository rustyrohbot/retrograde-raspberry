---
// src/layouts/BlogPost.astro
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage, tags = [] } = Astro.props;
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
  </head>
  <body class="bg-gray-50 text-gray-800 font-sans">
    <Header />
    <main class="max-w-4xl mx-auto py-8 px-4">
      <article>
        {heroImage && (
          <div class="mb-6">
            <img
              src={heroImage}
              alt=""
              class="w-full rounded-lg shadow-lg"
            />
          </div>
        )}
        <div class="prose prose-blue mx-auto">
          <div class="text-center mb-6">
            <h1 class="text-3xl font-bold mb-2">{title}</h1>

            {tags.length > 0 && (
              <div class="flex flex-wrap justify-center gap-2 mb-3">
                {tags.map((tag) => (
                  <a
                    href={`/blog/?tag=${tag}`}
                    class="text-xs px-3 py-1 bg-blue-100 text-blue-700 rounded-full hover:bg-blue-200 transition"
                  >
                    #{tag}
                  </a>
                ))}
              </div>
            )}

            <p class="text-sm text-gray-500">
              <FormattedDate date={pubDate} />
              {updatedDate && (
                <span class="italic block">
                  Last updated on <FormattedDate date={updatedDate} />
                </span>
              )}
            </p>
            <hr class="my-4" />
          </div>
          <slot />
        </div>
      </article>
    </main>
    <Footer />
  </body>
</html>